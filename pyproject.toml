[build-system]
requires = ["setuptools>=80", "setuptools_scm[toml]>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "mypackage"
description = "description of package"
authors = [{ name = "Masami Nirei", email = "masami.nirei@j-parc.jp" }]
dependencies = []
requires-python = ">=3.10"
readme = "README.md"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
license = { file = "LICENSE" }
dynamic = ["version"]

[project.optional-dependencies]
dev = [
  "pytest>=8.3,<9",
  "pytest-cov>=6.1,<7",
  "mypy>=1.15,<2",
  "ruff>=0.11,<0.12",
  "pre-commit>=4.2,<5",
  "tox-uv>=1.25,<2",
]
test = ["pytest>=8.3,<9", "pytest-cov>=6.1,<7"]
docs = [
  "mkdocs>=1.6,<1.7",
  "mkdocstrings[python]>=0.29,<1",
  "mkdocs-material>=9.6,<10",
]

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools_scm]
fallback_version = "0.0.0"
write_to = "src/mypackage/_version.py"

[tool.pytest.ini_options]
pythonpath = "src"

[tool.coverage.run]
omit = ["src/**/_version.py"]

[tool.tox]
envlist = ["py310", "py311", "py312", "py313"]
parallel_show_output = true

[tool.tox.testenv]
deps = [".[test]"]
commands = "pytest tests"

[tool.uv]
dev-dependencies = [
  "pytest>=8.3,<9",
  "pytest-cov>=6.1,<7",
  "mypy>=1.15,<2",
  "ruff>=0.11,<0.12",
  "pre-commit>=4.2,<5",
  "tox-uv>=1.25,<2",
  "mkdocs>=1.6,<1.7",
  "mkdocstrings[python]>=0.29,<1",
  "mkdocs-material>=9.6,<10",
]


[tool.ruff]
target-version = "py310"
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
fixable = ["ALL"]
ignore = [
  "COM812", # avoid conflict with ruff format
  "D105",   # allow missing docstring in magic method
  "D415",   # allow docstrings in which the first line does not end in a punctuation mark
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = [
  "INP001",  # allow missing an __init__.py file
  "S101",    # allow `assert` in tests (flake8-bandit)
  "D100",    # allow missing module docstring in test files
  "PLR2004", # allow using magic number in test files
]
[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
python_version = "3.10"
mypy_path = "src"
strict = true
ignore_missing_imports = true
show_error_codes = true
pretty = true
disallow_untyped_decorators = false
